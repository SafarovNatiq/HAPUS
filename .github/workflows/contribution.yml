name: Unified Multi-Account Workflow (Delay per Account Only)

on:
  workflow_dispatch:
    inputs:
      repo_prefix:
        description: 'Prefix nama repository (contoh: rixz)'
        default: 'rixz'
      repo_count:
        description: 'Jumlah repository per akun'
        default: 25
      min_words:
        default: 2
      max_words:
        default: 3
      total_commits:
        default: 1650
      total_days:
        default: 365
      total_prs:
        default: 120
      total_issues:
        default: 130
      target_repo:
        default: "safarovnatiq/hapus"

jobs:
  unified:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        include:
          - account: SafarovNatiq
            email: 97017190+SafarovNatiq@users.noreply.github.com
            token_secret: PAT1
          - account: miri-rodriguez
            email: 33882180+miri-rodriguezg@users.noreply.github.com
            token_secret: PAT2
          - account: davi709
            email: 67561050+davi709@users.noreply.github.com
            token_secret: PAT3
          - account: fahDkeerapak
            email: 125784790+fahDkeerapak@users.noreply.github.com
            token_secret: PAT4
          - account: zhanglei0031
            email: 91275664+zhanglei0031@users.noreply.github.com
            token_secret: PAT5
          - account: Veluste
            email: 10331502+Veluste@users.noreply.github.com
            token_secret: PAT6
          - account: sjj370817
            email: 91030827+sjj370817@users.noreply.github.com
            token_secret: PAT7
          - account: titotito12
            email: 17217284+titotito12@users.noreply.github.com
            token_secret: PAT8
          - account: luischalo74
            email: 143030870+luischalo74@users.noreply.github.com
            token_secret: PAT9
          - account: selmanuslu
            email: 63121832+selmanuslu@users.noreply.github.com
            token_secret: PAT10
          - account: greativann
            email: 139834460+greativann@users.noreply.github.com
            token_secret: pat11
          - account: vegeta888
            email: 19150937+vegeta888@users.noreply.github.com
            token_secret: PAT12
          - account: Samikhanzada
            email: 141436265+Samikhanzada@users.noreply.github.com
            token_secret: PAT13
          - account: sebastianohjne
            email: 680127+sebastianohjne@users.noreply.github.com
            token_secret: PAT14
          - account: Fel65
            email: 93129277+Fel65@users.noreply.github.com
            token_secret: PAT15
          - account: RockawayGio
            email: 138243063+RockawayGio@users.noreply.github.com
            token_secret: PAT16

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Delay antar akun (biar tidak mulai bersamaan)
      - name: Delay before account start
        run: |
          echo "üïí Menunggu 10 detik sebelum memulai akun ${{ matrix.account }}..."
          sleep 10

      # Tahap setup generator
      - name: Setup repository generator
        run: |
          WORDS=("quantum" "nova" "lumen" "matrix" "orbit" "vector" "sigma" "neon" "delta" "aero" "fusion" "zenith")
          SUFFIX=("project" "service" "system" "app" "engine" "hub" "core" "cloud" "framework")
          LANGS=("Python" "C++" "Go" "Swift" "Java" "JavaScript" "Ruby")
          EXT=("py" "cpp" "go" "swift" "java" "js" "rb")
          CONTENTS=(
            "print('Hello from Python!')"
            "#include <iostream>\nint main(){std::cout << \"Hello from C++!\"; return 0;}"
            "package main\nimport \"fmt\"\nfunc main(){fmt.Println(\"Hello from Go!\")}"
            "print(\"Hello from Swift!\")"
            "public class Main { public static void main(String[] args){ System.out.println(\"Hello from Java!\"); } }"
            "console.log('Hello from JavaScript!');"
            "puts 'Hello from Ruby!'"
          )

          echo "WORDS=${WORDS[*]}" >> $GITHUB_ENV
          echo "SUFFIX=${SUFFIX[*]}" >> $GITHUB_ENV
          echo "LANGS=${LANGS[*]}" >> $GITHUB_ENV
          echo "EXT=${EXT[*]}" >> $GITHUB_ENV
          echo "CONTENTS=${CONTENTS[*]}" >> $GITHUB_ENV

      - name: Create repositories for ${{ matrix.account }}
        env:
          PAT_TOKEN: ${{ secrets[matrix.token_secret] }}
        run: |
          set -euo pipefail
          IFS=' ' read -r -a WORDS <<< "$WORDS"
          IFS=' ' read -r -a SUFFIX <<< "$SUFFIX"
          IFS=' ' read -r -a LANGS <<< "$LANGS"
          IFS=' ' read -r -a EXT <<< "$EXT"
          IFS=' ' read -r -a CONTENTS <<< "$CONTENTS"

          PREFIX=${{ github.event.inputs.repo_prefix }}
          COUNT=${{ github.event.inputs.repo_count }}

          git config --global user.name "${{ matrix.account }}"
          git config --global user.email "${{ matrix.account }}@users.noreply.github.com"

          echo "=== [${{ matrix.account }}] Membuat $COUNT repository dengan prefix '$PREFIX' ==="

          for i in $(seq 1 $COUNT); do
            NAME="${PREFIX}-${WORDS[$RANDOM % ${#WORDS[@]}]}-${SUFFIX[$RANDOM % ${#SUFFIX[@]}]}"
            LANG_INDEX=$((RANDOM % ${#LANGS[@]}))
            LANG=${LANGS[$LANG_INDEX]}
            FILE_EXT=${EXT[$LANG_INDEX]}
            FILE_CONTENT=${CONTENTS[$LANG_INDEX]}
            FILE_NAME="main.${FILE_EXT}"

            echo "üì¶ Membuat repo: $NAME ($LANG)"
            curl -s -H "Authorization: token $PAT_TOKEN" \
                 -d "{\"name\":\"$NAME\",\"auto_init\":true}" \
                 https://api.github.com/user/repos > /dev/null
            sleep 2

            if [ -d "$NAME" ]; then
              rm -rf "$NAME"
            fi

            git clone https://x-access-token:${PAT_TOKEN}@github.com/${{ matrix.account }}/$NAME.git
            cd $NAME
            printf "%b\n" "$FILE_CONTENT" > $FILE_NAME
            git add -A
            git commit -m "Initial commit ($LANG)" || echo "‚ÑπÔ∏è Tidak ada perubahan untuk dikomit, lanjut..."
            git push origin main --force
            cd ..
            rm -rf "$NAME"
          done

      # Tahap aktivitas multi-akun
      - name: Clone target repo
        env:
          GH_TOKEN: ${{ secrets[matrix.token_secret] }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
        run: |
          git clone https://x-access-token:${GH_TOKEN}@github.com/$TARGET_REPO repo
          cd repo
          git config user.name "${{ matrix.account }}"
          git config user.email "${{ matrix.email }}"

      - name: Generate commits
        env:
          TOTAL_COMMITS: ${{ github.event.inputs.total_commits }}
          TOTAL_DAYS: ${{ github.event.inputs.total_days }}
          GH_TOKEN: ${{ secrets[matrix.token_secret] }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
        run: |
          cd repo
          mkdir -p logs
          COMMITS_PER_DAY=$((TOTAL_COMMITS / TOTAL_DAYS))
          START_DATE=$(date -d "$TOTAL_DAYS days ago" +%Y-%m-%d)

          echo "=== [${{ matrix.account }}] Membuat $TOTAL_COMMITS commit selama $TOTAL_DAYS hari ==="

          for ((day=0; day<TOTAL_DAYS; day++)); do
            DATE_STR=$(date -d "$START_DATE +$day days" +%Y-%m-%d)
            for ((i=1; i<=COMMITS_PER_DAY; i++)); do
              echo "Commit $i oleh ${{ matrix.account }} pada $DATE_STR" >> logs/${{ matrix.account }}_$day.txt
              git add logs/${{ matrix.account }}_$day.txt
              GIT_COMMITTER_DATE="$DATE_STR 12:00:00" \
              GIT_AUTHOR_DATE="$DATE_STR 12:00:00" \
              git commit -m "Auto commit $i by ${{ matrix.account }}" || true
            done
          done

          for attempt in {1..3}; do
            git push --force https://x-access-token:${GH_TOKEN}@github.com/$TARGET_REPO HEAD:main && break || sleep 3
          done

      - name: Create PRs and Issues
        env:
          GH_TOKEN: ${{ secrets[matrix.token_secret] }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
          TOTAL_PRS: ${{ github.event.inputs.total_prs }}
          TOTAL_ISSUES: ${{ github.event.inputs.total_issues }}
        run: |
          cd repo
          echo "=== [${{ matrix.account }}] Membuat $TOTAL_PRS PR dan $TOTAL_ISSUES Issue ==="
          for i in $(seq 1 $TOTAL_PRS); do
            branch="auto-${{ matrix.account }}-pr-$i-$(date +%s)"
            echo "Pull request #$i by ${{ matrix.account }}" > pr_${{ matrix.account }}_$i.txt
            git checkout -B $branch
            git add pr_${{ matrix.account }}_$i.txt
            git commit -m "PR otomatis #$i oleh ${{ matrix.account }}"
            git push -f https://x-access-token:${GH_TOKEN}@github.com/$TARGET_REPO HEAD:$branch
            gh pr create \
              --title "PR #$i dari ${{ matrix.account }}" \
              --body "PR otomatis oleh ${{ matrix.account }}" \
              --base main --head $branch \
              --repo $TARGET_REPO || true
            sleep 2
          done

          for i in $(seq 1 $TOTAL_ISSUES); do
            gh issue create \
              --title "Issue #$i dari ${{ matrix.account }}" \
              --body "Auto-generated issue $i oleh ${{ matrix.account }}" \
              --repo $TARGET_REPO || true
            sleep 1
          done
